// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// NextAuth.js Models
// Documentation: https://next-auth.js.org/adapters/prisma

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("client") // "client" | "admin"
  clientId      String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  client   Client?   @relation(fields: [clientId], references: [id])

  @@index([email])
  @@index([clientId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// BookedSolid AI Business Models

model Client {
  id           String   @id @default(cuid())
  businessName String
  email        String   @unique
  phone        String
  plan         String   @default("missed") // "missed" | "complete" | "unlimited"
  status       String   @default("active") // "active" | "suspended" | "demo"
  timezone     String   @default("America/New_York")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Stripe Integration
  stripeCustomerId       String?  @unique
  stripeSubscriptionId   String?  @unique
  stripeSubscriptionStatus String? // "active" | "canceled" | "past_due" | "trialing" | "incomplete"
  stripePriceId          String?  // Current price ID
  billingInterval        String   @default("month") // "month" | "year"
  subscriptionEndsAt     DateTime?

  // Billing information (embedded as JSON for flexibility)
  billing Json // BillingInfo: { currentPeriodStart, currentPeriodEnd, minutesIncluded, minutesUsed, overageRate, monthlyRate }

  // Client settings (embedded as JSON for flexibility)
  settings Json // ClientSettings: { voiceType, speakingSpeed, customGreeting, bookingSystem, calendarSync }

  // Relations
  users       User[]
  callRecords CallRecord[]

  @@index([email])
  @@index([status])
  @@index([createdAt])
  @@index([stripeCustomerId])
  @@index([stripeSubscriptionId])
}

model CallRecord {
  id         String   @id @default(cuid())
  clientId   String
  timestamp  DateTime @default(now())
  callerName String
  callerPhone String
  duration   Int      // in seconds
  outcome    String   // "booked" | "info" | "voicemail" | "transferred" | "spam"
  notes      String
  recordingUrl String?
  transcriptUrl String?

  // Retell.ai specific fields
  retellCallId       String?  @unique // Retell's unique call_id
  agentId            String?  // Retell agent ID
  callType           String?  // "phone_call" | "web_call"
  toNumber           String?  // Destination phone number
  direction          String?  // "inbound" | "outbound"
  callStatus         String?  // "registered" | "ongoing" | "ended" | "error"
  startTimestamp     BigInt?  // Unix timestamp in milliseconds
  endTimestamp       BigInt?  // Unix timestamp in milliseconds
  disconnectionReason String? // Reason for call ending
  transcript         String?  // Full text transcript
  transcriptObject   Json?    // Structured transcript with segments
  transcriptWithToolCalls Json? // Transcript including AI tool interactions
  metadata           Json?    // Custom metadata from Retell
  llmDynamicVariables Json?   // retell_llm_dynamic_variables
  optOutSensitiveData Boolean @default(false) // Privacy flag

  // Appointment details (embedded as JSON, nullable)
  appointmentDetails Json? // AppointmentDetails: { service, date, time, stylist, estimatedValue }

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  client Client @relation(fields: [clientId], references: [id], onDelete: Cascade)

  @@index([clientId])
  @@index([timestamp])
  @@index([outcome])
  @@index([retellCallId])
  @@index([callStatus])
  @@index([direction])
}
